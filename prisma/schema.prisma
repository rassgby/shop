// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL") // Utilisez votre URI MongoDB
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  price          Float
  discountedPrice Float?
  category       Category   @relation(fields: [categoryId], references: [id])
  categoryId     String     @db.ObjectId
  subcategory    Subcategory? @relation(fields: [subcategoryId], references: [id])
  subcategoryId  String?    @db.ObjectId
  brand          String?
  images         String[]
  stock          Int
  sku            String
  wishedBy    User[]   @relation(fields: [wishedByIds], references: [id])
  wishedByIds String[] @db.ObjectId
  ratings        Float?
  reviews        Int?
  featured       Boolean    @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Category {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  slug        String     @unique
  image       String?
  description String?
  featured    Boolean    @default(false)
  products    Product[]
  subcategories Subcategory[]
  createdAt   DateTime   @default(now())
}

model Subcategory {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  slug          String    @unique
  parentCategory Category  @relation(fields: [parentCategoryId], references: [id])
  parentCategoryId String  @db.ObjectId
  products      Product[]
  createdAt     DateTime  @default(now())
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName  String
  lastName   String
  email      String    @unique
  password   String
  addresses  Address[]
  wishlist   Product[] @relation(fields: [wishlistIds], references: [id])
  wishlistIds String[] @db.ObjectId
  createdAt  DateTime  @default(now())
}

type Address {
  street    String
  city      String
  state     String
  zipCode   String
  country   String
  isDefault Boolean @default(false)
}